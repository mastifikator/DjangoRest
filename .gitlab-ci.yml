stages:
  - build
  - deploy

before_script:
  - pwd
  - echo $CI_PROJECT_PATH
  - echo $CI_COMMIT_REF_NAME
  - echo $CI_REGISTRY_USER
  - echo $CI_REGISTRY_PASSWORD
  - echo $CI_REGISTRY

variables:
  GIT_STRATEGY: clone
  USER_NAME: root
  BACKEND1_IMAGE: $CI_REGISTRY/$USER_NAME/djangorest/backend1:latest
  BACKEND2_IMAGE: $CI_REGISTRY/$USER_NAME/djangorest/backend2:latest
  FRONTEND_IMAGE: $CI_REGISTRY/$USER_NAME/djangorest/frontend:latest
  NGINX_IMAGE: $CI_REGISTRY/$USER_NAME/djangorest/nginx:latest

backend1_build:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $BACKEND1_IMAGE --rm ./stage1_docker/backend1/additional/
    - docker push $BACKEND1_IMAGE

backend2_build:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $BACKEND2_IMAGE --rm ./stage1_docker/backend2/multiplication/
    - docker push $BACKEND2_IMAGE

frontend_build:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $FRONTEND_IMAGE --rm ./stage1_docker/frontend/front/
    - docker push $FRONTEND_IMAGE

nginx_build:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $NGINX_IMAGE --rm ./stage1_docker/nginx/
    - docker push $NGINX_IMAGE

environment_build:
  stage: build
  script:
    - docker network create -d bridge calculator_network

backend1_deploy:
  stage: deploy
  script:
    - docker run -d -p 8001:8001 --name=backend1 --network=calculator_network $BACKEND1_IMAGE 

backend2_deploy:
  stage: deploy
  script:
    - docker run -d -p 8002:8002 --name=backend2 --network=calculator_network $BACKEND2_IMAGE

frontend_deploy:
  stage: deploy
  script:
    - docker run -d -p 8003:8003 --name=frontend --network=calculator_network $FRONTEND_IMAGE

nginx_deploy:
  stage: deploy
  script:
    - docker run -d -p 8000:8000 --name=nginx --network=calculator_network $NGINX_IMAGE